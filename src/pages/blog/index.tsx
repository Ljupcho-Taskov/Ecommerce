import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import React, { useRef } from "react";
import BlogItem from "../../components/BlogItem";
import PageTitle from "../../components/PageTitle";
import { BlogsType } from "../../types/types";
import Link from "next/link";
import router, { useRouter } from "next/router";

interface Props {
  data: BlogsType[];
  noResults: boolean;
}

const Blog: NextPage<Props> = ({ data, noResults }) => {
  const { asPath } = useRouter();
  const inputRef = useRef<HTMLInputElement>(null);

  const handleOnSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    router.push({
      pathname: "/blog",
      query: {
        ...router.query,
        q: inputRef?.current?.value,
      },
    });

    if (inputRef.current) {
      inputRef.current.value = "";
    }
  };
  return (
    <>
      <Head>
        <title>Store - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title="Blog" />

      <section className="bg0 p-t-62 p-b-60">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                {noResults ? (
                  <p>There are no results with your search.</p>
                ) : (
                  data.map((blog) => (
                    <Link href={`/blog/${blog.id}`} key={blog.id}>
                      <BlogItem {...blog} />
                    </Link>
                  ))
                )}
              </div>
            </div>

            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                <form
                  className="bor17 of-hidden pos-relative"
                  onSubmit={handleOnSubmit}
                >
                  <input
                    ref={inputRef}
                    className="stext-103 cl2 plh4 size-116 p-l-28 p-r-55"
                    type="text"
                    name="search"
                    placeholder="Search"
                  />

                  <button className="flex-c-m size-122 ab-t-r fs-18 cl4 hov-cl1 trans-04">
                    <i className="zmdi zmdi-search"></i>
                  </button>
                </form>

                <div className="p-t-55">
                  <h4 className="mtext-112 cl2 p-b-33">Categories</h4>

                  <ul>
                    <li className="bor18">
                      <Link href="blog?category=fashion">
                        <button
                          className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                            asPath.includes("blog?category=fashion")
                              ? "font-weight-bold how-active1"
                              : ""
                          }`}
                        >
                          Fashion
                        </button>
                      </Link>
                    </li>

                    <li className="bor18">
                      <Link href="blog?category=beauty">
                        <button
                          className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                            asPath.includes("blog?category=beauty")
                              ? "font-weight-bold how-active1"
                              : ""
                          }`}
                        >
                          Beauty
                        </button>
                      </Link>
                    </li>

                    <li className="bor18">
                      <Link href="blog?category=streetstyle">
                        <button
                          className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                            asPath.includes("blog?category=streetstyle")
                              ? "font-weight-bold how-active1"
                              : ""
                          }`}
                        >
                          StreetStyle
                        </button>
                      </Link>
                    </li>

                    <li className="bor18">
                      <Link href="blog?category=lifestyle">
                        <button
                          className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                            asPath.includes("blog?category=lifestyle")
                              ? "font-weight-bold how-active1"
                              : ""
                          }`}
                        >
                          Life Style
                        </button>
                      </Link>
                    </li>

                    <li className="bor18">
                      <Link href="blog?category=diy">
                        <button
                          className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                            asPath.includes("blog?category=diy")
                              ? "font-weight-bold how-active1"
                              : ""
                          }`}
                        >
                          DIY & Crafts
                        </button>
                      </Link>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};

export default Blog;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  let res: Response;
  let data: BlogsType[] = [];
  let noResults = false;

  if (query.category && query.q) {
    res = await fetch(
      `http://localhost:5001/blogs?category_like=${query.category}&q=${query.q}`
    );
  } else if (query.category) {
    res = await fetch(
      `http://localhost:5001/blogs?category_like=${query.category}`
    );
  } else if (query.q) {
    res = await fetch(`http://localhost:5001/blogs?q=${query.q}`);
  } else {
    res = await fetch(`http://localhost:5001/blogs`);
  }
  data = await res.json();
  if (data.length === 0) {
    noResults = true;
  }
  return {
    props: {
      data,
      noResults,
    },
  };
};
